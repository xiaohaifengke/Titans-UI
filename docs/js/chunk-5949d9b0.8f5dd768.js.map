{"version":3,"sources":["webpack:///./story/pages/demo/demo-use-slots.vue","webpack:///./story/pages/demo/demo-use-slots.vue?6050","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/use/useSlots.ts","webpack:///./story/pages/demo/demo-use-slots-component/demo-use-slots-component.tsx"],"names":["style","changeSlot","components","DemoUseSlotsComponent","setup","slotName","value","render","_arrayWithoutHoles","arr","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","Object","from","_nonIterableSpread","TypeError","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","useSlots","slotList","ctx","slotNames","slots","reduce","slot","isExist","slotFn","defaultVnode","name","props","setupContext","classes","head","default","foot"],"mappings":"wKAGY,eAAwC,OAAnCA,MAAA,eAAoB,aAAS,G,EAGlC,eAAqC,KAAlCA,MAAA,gBAAqB,aAAS,G,+HALzC,eAO2B,QAP3B,sBACe,WAAU,gBACjB,iBAAwC,CAAxC,OAFR,2BAIsB,gBACd,iBAAqC,CAArC,OALR,qB,GAAA,G,MAQA,eAAgD,UAAvC,QAAK,8BAAE,EAAAC,YAAA,EAAAA,WAAA,sBAAY,gB,gCAKjB,GACXC,WAAY,CAAEC,sBAAA,cACdC,MAFW,WAGP,IAAMC,EAAW,eAAI,QACfJ,EAAa,WACfI,EAASC,MAAQ,QAErB,MAAO,CACHD,WACAJ,gBCpBZ,EAAOM,OAASA,EAED,gB,wGCJA,SAASC,EAAmBC,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAOG,eAAiBH,G,sECFnC,SAASI,EAAiBC,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOJ,MAAMQ,KAAKJ,G,gBCD3E,SAASK,IACtB,MAAM,IAAIC,UAAU,wICGP,SAASC,EAAmBZ,GACzC,OAAOa,EAAkBb,IAAQc,EAAgBd,IAAQe,eAA2Bf,IAAQgB,I,gBCCxF,SAAUC,IAA6C,IAAlBC,EAAkB,uDAAF,GACjDC,EAAM,iBACNC,EAAY,GAAH,SAAOF,GAAP,CAAiB,YAC1BG,EAAQD,EAAUE,QAAO,SAACD,EAAOE,GACnC,IAAMC,EAAU,WACZ,QAASL,EAAIE,MAAME,IAEjBE,EAAS,SAACC,GAA4B,QACxC,OAAO,aAAAP,EAAIE,OAAME,UAAV,yBAAuBG,GAIlC,OAFAD,EAAOD,QAAUA,EACjBH,EAAME,GAAQE,EACPJ,IACR,IAEH,OAAOA,I,iFCjBI,4BAAgB,CAC3BM,KAAM,2BACNC,MAAO,GACPjC,MAH2B,YAGP,EAAbkC,aAAa,IACVR,EAAQ,eAAS,CACnB,OACA,SAGES,EAAU,gBAAS,iBAAM,CAC3B,2BACA,CACI,yCAA0CT,EAAMU,KAAKP,eAG7D,MAAO,CACH1B,OADG,WAEC,OACI,4BAAYgC,EAAQjC,OAApB,CACI,4BAAW,iCAAX,CACKwB,EAAMU,KAAK,kBAEhB,4BAAW,iCAAX,CACKV,EAAMW,QACH,8DAGR,4BAAW,iCAAX,CACKX,EAAMY,KAAK","file":"js/chunk-5949d9b0.8f5dd768.js","sourcesContent":["<template>\n    <demo-use-slots-component>\n        <template #[slotName]>\n            <div style=\"color: red;\">这是测试动态插槽的</div>\n        </template>\n        <template #default>\n            <p style=\"color: cyan;\">这是默认的插槽哦.</p>\n        </template>\n    </demo-use-slots-component>\n    <button @click=\"changeSlot\">change slot</button>\n</template>\n<script>\nimport { ref } from '@vue/reactivity';\nimport DemoUseSlotsComponent from './demo-use-slots-component/demo-use-slots-component.tsx';\nexport default {\n    components: { DemoUseSlotsComponent },\n    setup() {\n        const slotName = ref('head');\n        const changeSlot = () => {\n            slotName.value = 'foot';\n        };\n        return {\n            slotName,\n            changeSlot\n        };\n    }\n};\n</script>","import { render } from \"./demo-use-slots.vue?vue&type=template&id=c97d3584\"\nimport script from \"./demo-use-slots.vue?vue&type=script&lang=js\"\nexport * from \"./demo-use-slots.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { VNodeChild } from \"@/shims\";\nimport { getCurrentInstance } from \"vue\";\n\ntype SlotFunction = ((vnode?: VNodeChild) => VNodeChild) & { isExist: () => boolean }\ntype SlotsData<T extends string> = { [k in T]: SlotFunction}\n\nexport function useSlots<T extends string>(slotList: T[] = []): SlotsData<T|'default'> {\n    const ctx = getCurrentInstance()!;\n    const slotNames = [...slotList, 'default'] as T[];\n    const slots = slotNames.reduce((slots, slot) => {\n        const isExist = () => {\n            return !!ctx.slots[slot];\n        };\n        const slotFn = (defaultVnode: VNodeChild) => {\n            return ctx.slots[slot]?.() || defaultVnode;\n        };\n        slotFn.isExist = isExist;\n        slots[slot] = slotFn;\n        return slots;\n    }, {} as SlotsData<string>);\n\n    return slots;\n}","import {designComponent} from \"../../../../src/use/designComponent\";\nimport {useSlots} from \"../../../../src/use/useSlots\";\nimport {computed} from 'vue';\n\nexport default designComponent({\n    name: 'demo-use-slots-component',\n    props: {},\n    setup({setupContext}) {\n        const slots = useSlots([\n            'head',\n            'foot'\n        ]);\n\n        const classes = computed(() => [\n            'demo-use-slots-component',\n            {\n                'demo-use-slots-component-has-slot-head': slots.head.isExist()\n            }\n        ]);\n        return {\n            render() {\n                return (\n                    <div class={classes.value}>\n                        <div class=\"demo-use-slots-component-head\">\n                            {slots.head('default head')}\n                        </div>\n                        <div class=\"demo-use-slots-component-body\">\n                            {slots.default(\n                                <h1>default body</h1>\n                            )}\n                        </div>\n                        <div class=\"demo-use-slots-component-foot\">\n                            {slots.foot('default foot')}\n                        </div>\n\n                        \n                    </div>\n                );\n            },\n        };\n    },\n});"],"sourceRoot":""}